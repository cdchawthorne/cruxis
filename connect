#!/usr/bin/env zsh

function usage {
    echo "usage: cruxis $(basename $0) [-p wpa|wep] [-k] SSID" 1>&2
    echo "       cruxis $(basename $0) -f WPA_SUPPLICANT_CONF_FILE" 1>&2
    echo 'must be run as root' 1>&2
}

function connect_from_wpa_conf {
    wpa_conf_file=$1
    wpa_supplicant -D wext -i wlan0 -c ${wpa_conf_file} &> /dev/null &|
    supplicant_pid=$!
    dhcpcd wlan0 2> /dev/null
    ret=$?
    [[ ret -eq 0 ]] || kill ${supplicant_pid}
    return ret
}

function quick_connect_wpa {
    builtin read -s 'key?Enter wireless key: '
    echo

    wpa_supplicant -D wext -i wlan0 -c <(wpa_passphrase $1 <<< ${key}) &> /dev/null &|
    supplicant_pid=$!
    echo foo
    dhcpcd wlan0 2> /dev/null
    echo bar
    ret=$?
    [[ ret -eq 0 ]] || kill ${supplicant_pid}
    return ret
}

function quick_connect_wep {
    essid=$1
    ip link set wlan0 up
    iwconfig wlan0 essid ${essid} key ${key}
    ip link set wlan0 down
    ip link set wlan0 up
    if [[ ${#key_opt} -gt 0 ]]; then
        builtin read -s 'key?Enter wireless key: '
        echo
        iwconfig wlan0 essid ${essid} key ${key}
    else
        iwconfig wlan0 essid ${essid}
    fi
    dhcpcd wlan0 2> /dev/null
}

function get_protocol {
    ip link set wlan0 up
    sleep 2
    protocols=$(iwlist wlan0 scan |
                sed -rn -e 's_^ {20}ESSID:"(.*)"$_ESSID:\1_p' -e 's_^ {20}IE: .*(WPA|WEP)_\1_ip' |
                fgrep -A 1 -x "ESSID:$1" |
                egrep -v ESSID |
                uniq)
    ip link set wlan0 down

    if [[ $(wc -l <<< ${protocols}) -gt 1 ]]; then
        echo "ERROR: multiple networks with different protocols found matching given SSID" 1>&2
        echo "       specify a protocol with -p" 1>&2
        exit 1
    fi

    if [[ -z ${protocols} ]]; then
        echo "Failed to connect to $1: network not found" 1>&2
        exit 1
    fi

    echo ${protocols}
}

zparseopts -D p:=protocol_opt k=key_opt f:=wpa_conf_file_opt n=no_lock_opt

# some unreadable usage checks
[[ $(((${#key_opt} + ${#protocol_opt}) && ${#wpa_conf_file_opt})) -eq 0 ]] || { usage; exit 1; }
[[ $(whoami) == root ]] || { usage; exit 1; }
[[ ${#wpa_conf_file_opt} -eq 0 && $# -ne 1 ]] && { usage; exit 1; }
[[ ${#wpa_conf_file_opt} -ne 0 && $# -ne 0 ]] && { usage; exit 1; }
[[ ${#protocol_opt} -eq 0 || ${protocol_opt[2]} =~ "wpa|wep" ]] || { usage; exit 1; }

pkill -f '^(dhcpcd|dhcpcd.* wlan0( .*)?)$' &> /dev/null
pkill wpa_supplicant &> /dev/null
ip link set wlan0 down

# What connect function shall we call?
if [[ ${#wpa_conf_file_opt} -gt 0 ]]; then
    connect_from_wpa_conf ${wpa_conf_file_opt[2]}
elif [[ ${#protocol_opt} -eq 0 ]]; then
    protocol=$(get_protocol $1)

    # Could we find a protocol for this ssid?
    ret=$?
    if [[ ${ret} -ne 0 ]]; then
        exit ${ret}
    fi

    if [[ ${protocol} =~ "[Ww][Pp][Aa]" ]]; then
        quick_connect_wpa $1
    else
        quick_connect_wep $1
    fi
elif [[ ${protocol_opt[2]} == wep ]]; then
    quick_connect_wep $1
else
    quick_connect_wpa $1
fi

ret=$?
if [[ ${ret} -eq 0 ]]; then
    echo "cruxis: connection successful" 1>&2
    exit 0
else
    ip link set wlan0 down
    echo "cruxis: connection failed with error code ${ret}" 1>&2
    exit ${ret}
fi
